<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.modules.his.mapper.CopyMapper">
    <insert id="copyMedicalFormalCaseByCaseIds">
        insert into medical_formal_case
        (
        case_id,
        case_code,
        case_name,
        case_codes,
        case_names,
        case_status,
        case_remark,
        case_version,
        case_classify,
        flow_json,
        create_userid,
        create_username,
        create_time,
        update_remark,
        submit_userid,
        submit_username,
        submit_time,
        action_name,
        action_desc,
        rule_basis,
        rule_source,
        rule_source_code,
        start_time,
        end_time,
        action_id,
        action_type,
        action_type_name,
        order_no,
        result_data_status,
        id_data_count,
        obj_data_count,
        data_money,
        result_start_time,
        result_end_time,
        resule_message)
        select
        <if test="dbType == 'ORACLE'">
        concat(SUBSTR(CASE_ID, 1, 19),#{suffix}),
        </if>
        <if test="dbType == 'MYSQL'">
        concat(substring(CASE_ID, 1, 19),#{suffix}),
        </if>
        case_code,
        concat(case_name,'-复制'),
        case_codes,
        case_names,
        case_status,
        case_remark,
        1,
        case_classify,
        flow_json,
        #{createInfo.createUserid},
        #{createInfo.createUsername},
        #{createInfo.createTime},
        update_remark,
        submit_userid,
        submit_username,
        submit_time,
        action_name,
        action_desc,
        rule_basis,
        rule_source,
        rule_source_code,
        start_time,
        end_time,
        action_id,
        action_type,
        action_type_name,
        order_no,
        result_data_status,
        id_data_count,
        obj_data_count,
        data_money,
        result_start_time,
        result_end_time,
        resule_message
        from medical_formal_case
        where case_id in
        <foreach collection="caseIds" item="caseId" index="index" open="(" close=")" separator=",">
            #{caseId}
        </foreach>
    </insert>

    <insert id="copyMedicalFormalFlowByCaseIds">
        insert into medical_formal_flow
        (
        node_id,
        node_code,
        node_type,
        node_name,
        prev_node_code,
        prev_node_condition,
        case_id,
        param_code,
        order_no)
        select
        <if test="dbType == 'ORACLE'">
        concat(SUBSTR(node_id, 1, 19), #{suffix}),
        </if>
        <if test="dbType == 'MYSQL'">
        concat(substring(node_id, 1, 19), #{suffix}),
        </if>
        node_code,
        node_type,
        node_name,
        prev_node_code,
        prev_node_condition,
        <if test="dbType == 'ORACLE'">
        concat(SUBSTR(CASE_ID, 1, 19),#{suffix}),
        </if>
        <if test="dbType == 'MYSQL'">
        concat(substring(CASE_ID, 1, 19),#{suffix}),
        </if>
        param_code,
        order_no
        from medical_formal_flow
        where case_id in
        <foreach collection="caseIds" item="caseId" index="index" open="(" close=")" separator=",">
            #{caseId}
        </foreach>
    </insert>

    <insert id="copyMedicalFormalFlowRuleByCaseIds">
        insert into medical_formal_flow_rule
        (
        rule_id,
        node_id,
        case_id,
        group_no,
        logic,
        table_name,
        col_name,
        compare_type,
        compare_value,
        order_no,
        node_code)
        select
        <if test="dbType == 'ORACLE'">
        concat(SUBSTR(rule_id, 1, 19),#{suffix}),
        concat(SUBSTR(node_id, 1, 19),#{suffix}),
        concat(SUBSTR(CASE_ID, 1, 19),#{suffix}),
        </if>
        <if test="dbType == 'MYSQL'">
        concat(substring(rule_id, 1, 19),#{suffix}),
        concat(substring(node_id, 1, 19),#{suffix}),
        concat(substring(CASE_ID, 1, 19),#{suffix}),
        </if>
        group_no,
        logic,
        table_name,
        col_name,
        compare_type,
        compare_value,
        order_no,
        node_code
        from medical_formal_flow_rule
        where case_id in
        <foreach collection="caseIds" item="caseId" index="index" open="(" close=")" separator=",">
            #{caseId}
        </foreach>
    </insert>

    <insert id="copyMedicalFormalFlowRuleGradeByCaseIds">
        insert into medical_formal_flow_rule_grade
        (
        grade_id,
        case_id,
        evaluate_table,
        evaluate_field,
        evaluate_fieldname,
        standard_val,
        weight,
        method,
        node_id,
        node_code)
        select
        <if test="dbType == 'ORACLE'">
        concat(SUBSTR(grade_id, 1, 19),#{suffix}),
        concat(SUBSTR(CASE_ID, 1, 19),#{suffix}),
        </if>
        <if test="dbType == 'MYSQL'">
        concat(substring(grade_id, 1, 19),#{suffix}),
        concat(substring(CASE_ID, 1, 19),#{suffix}),
        </if>
        evaluate_table,
        evaluate_field,
        evaluate_fieldname,
        standard_val,
        weight,
        method,
        node_id,
        node_code
        from medical_formal_flow_rule_grade
        where case_id in
        <foreach collection="caseIds" item="caseId" index="index" open="(" close=")" separator=",">
            #{caseId}
        </foreach>
    </insert>


    <insert id="copyMedicalFormalCaseItemRelaByCaseIds">
        INSERT INTO MEDICAL_FORMAL_CASE_ITEM_RELA
        (
        ID,
        CASE_ID,
         TYPE, UPDATE_TIME, UPDATE_USER,
         CREATE_TIME, CREATE_USER, ITEM_IDS, ITEM_NAMES
        )
        select
        <if test="dbType == 'ORACLE'">
        concat(SUBSTR(ID, 1, 19),#{suffix}),
        concat(SUBSTR(CASE_ID, 1, 19),#{suffix}),
        </if>
        <if test="dbType == 'MYSQL'">
        concat(substring(ID, 1, 19),#{suffix}),
        concat(substring(CASE_ID, 1, 19),#{suffix}),
        </if>
        TYPE, null, null,
        #{createInfo.createTime},
        #{createInfo.createUserid},
        ITEM_IDS, ITEM_NAMES
        from MEDICAL_FORMAL_CASE_ITEM_RELA
        where case_id in
        <foreach collection="caseIds" item="caseId" index="index" open="(" close=")" separator=",">
            #{caseId}
        </foreach>
    </insert>


</mapper>
